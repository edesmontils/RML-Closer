@prefix rr:    <http://www.w3.org/ns/r2rml#> .
@prefix rml:   <http://semweb.mmlab.be/ns/rml#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml:   <http://www.w3.org/XML/1998/namespace> .
@prefix em:    <http://desmontils.net/ns/sw/em#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ql:    <http://semweb.mmlab.be/ns/ql#> .

em:Cotoie  a         rdf:Property ;
        rdfs:domain  em:Pays ;
        rdfs:label   "Côtoie" ;
        rdfs:range   em:EspaceMaritime .

em:EspaceMaritime  a     rdfs:Class ;
        rdfs:label       "Espace Maritime" ;
        rdfs:subClassOf  em:Water .

em:Water  a              rdfs:Class ;
        rdfs:subClassOf  em:Liquid .

em:Longueur  a       rdf:Property ;
        rdfs:domain  em:Fleuve ;
        rdfs:label   "Longueur" ;
        rdfs:range   xsd:decimal .

<file:///Users/desmontils-e/Programmation/RML-Extender/EM2EM.ttl#river>
        rml:logicalSource      [ rml:iterator              "/em/liste-pays/pays/fleuve" ;
                                 rml:referenceFormulation  ql:XPath ;
                                 rml:source                "em.xml"
                               ] ;
        rr:predicateObjectMap  [ rr:objectMap  [ rr:joinCondition     [ rr:child   "parcourt/@id-pays" ;
                                                                        rr:parent  "@id-p"
                                                                      ] ;
                                                 rr:parentTriplesMap  <file:///Users/desmontils-e/Programmation/RML-Extender/EM2EM.ttl#country>
                                               ] ;
                                 rr:predicate  em:parcourt3
                               ] ;
        rr:predicateObjectMap  [ rr:objectMap  [ rr:parentTriplesMap  <file:///Users/desmontils-e/Programmation/RML-Extender/EM2EM.ttl#parcourt2> ] ;
                                 rr:predicate  em:parcourt2
                               ] ;
        rr:predicateObjectMap  [ rr:objectMap  [ rr:template  "http://www.example.org/country/{parcourt/@id-pays}" ] ;
                                 rr:predicate  em:parcourt
                               ] ;
        rr:predicateObjectMap  [ rr:objectMap  [ rml:reference  "@nom-f" ;
                                                 rr:datatype    xsd:string
                                               ] ;
                                 rr:predicate  em:nom-f
                               ] ;
        rr:predicateObjectMap  [ rr:objectMap  [ rr:template  "http://www.example.org/country/{@se-jette}" ] ;
                                 rr:predicate  em:seJette
                               ] ;
        rr:predicateObjectMap  [ rr:objectMap  [ rml:reference  "@longueur" ;
                                                 rr:datatype    xsd:number
                                               ] ;
                                 rr:predicate  em:longueur
                               ] ;
        rr:subjectMap          [ rr:class     em:Fleuve ;
                                 rr:template  "http://www.example.org/river/{@id-f}"
                               ] .

em:NbHab  a          rdf:Property ;
        rdfs:domain  em:Pays ;
        rdfs:label   "Nb Hab" ;
        rdfs:range   xsd:decimal .

em:Parcourt  a      rdfs:Class ;
        rdfs:label  "Parcourt" .

em:Nom-f  a          rdf:Property ;
        rdfs:domain  em:Fleuve ;
        rdfs:label   "Nom-f" ;
        rdfs:range   xsd:string .

em:Mer  a           em:TypeValue ;
        rdfs:label  "Mer" .

em:Pays  a          rdfs:Class ;
        rdfs:label  "Pays" .

em:qui  a            rdf:Property ;
        rdfs:domain  em:Parcourt ;
        rdfs:label   "qui" ;
        rdfs:range   em:Fleuve .

<file:///Users/desmontils-e/Programmation/RML-Extender/EM2EM.ttl#country>
        rml:logicalSource      [ rml:iterator              "/em/liste-pays/pays" ;
                                 rml:referenceFormulation  ql:XPath ;
                                 rml:source                "em.xml"
                               ] ;
        rr:predicateObjectMap  [ rr:objectMap  [ rml:reference  "@nbhab" ;
                                                 rr:datatype    xsd:number
                                               ] ;
                                 rr:predicate  em:nbHab
                               ] ;
        rr:predicateObjectMap  [ rr:objectMap  [ rr:template  "http://www.example.org/country/{fleuve/@id-f}" ] ;
                                 rr:predicate  em:estSource
                               ] ;
        rr:predicateObjectMap  [ rr:objectMap  [ rml:reference  "@superficie" ;
                                                 rr:datatype    xsd:number
                                               ] ;
                                 rr:predicate  em:superficie
                               ] ;
        rr:predicateObjectMap  [ rr:objectMap  [ rml:reference  "@nom-p" ;
                                                 rr:datatype    xsd:string
                                               ] ;
                                 rr:predicate  em:nom-p
                               ] ;
        rr:subjectMap          [ rr:class     em:Pays ;
                                 rr:template  "http://www.example.org/country/{@id-p}"
                               ] .

em:Distance  a       rdf:Property ;
        rdfs:domain  em:Parcourt ;
        rdfs:label   "Distance" ;
        rdfs:range   xsd:decimal .

<file:///Users/desmontils-e/Programmation/RML-Extender/EM2EM.ttl#parcourt2>
        rml:logicalSource  [ rml:iterator              "/em/liste-pays/pays/fleuve/parcourt" ;
                             rml:referenceFormulation  ql:XPath ;
                             rml:source                "em.xml"
                           ] ;
        rr:subjectMap      [ rr:template  "http://www.example.org/country/{@id-pays}" ] .

em:Nom-e  a          rdf:Property ;
        rdfs:domain  em:EspaceMaritime ;
        rdfs:label   "Nom-e" ;
        rdfs:range   xsd:string .

em:Superficie  a     rdf:Property ;
        rdfs:domain  em:Pays ;
        rdfs:label   "Superficie" ;
        rdfs:range   xsd:decimal .

em:SeJette  a        rdf:Property ;
        rdfs:domain  em:Fleuve ;
        rdfs:label   "Se Jette" ;
        rdfs:range   em:EspaceMaritime .

em:Nom-p  a          rdf:Property ;
        rdfs:domain  em:Pays ;
        rdfs:label   "Nom-p" ;
        rdfs:range   xsd:string .

em:Type  a           rdf:Property ;
        rdfs:domain  em:EspaceMaritime ;
        rdfs:label   "Type" ;
        rdfs:range   em:TypeValue .

<file:///Users/desmontils-e/Programmation/RML-Extender/EM2EM.ttl#sea>
        rml:logicalSource      [ rml:iterator              "/em/liste-espace-maritime/espace-maritime" ;
                                 rml:referenceFormulation  ql:XPath ;
                                 rml:source                "em.xml"
                               ] ;
        rr:predicateObjectMap  [ rr:objectMap  [ rr:template  "http://www.example.org/country/{cotoie/@id-p}" ] ;
                                 rr:predicate  em:cotoie
                               ] ;
        rr:predicateObjectMap  [ rr:objectMap  [ rml:reference  "@nom-e" ;
                                                 rr:datatype    xsd:string
                                               ] ;
                                 rr:predicate  em:nom-em
                               ] ;
        rr:subjectMap          [ rr:class     em:EspaceMaritime ;
                                 rr:template  "http://www.example.org/sea/{@id-e}"
                               ] .

em:où   a            rdf:Property ;
        rdfs:domain  em:Parcourt ;
        rdfs:label   "où" ;
        rdfs:range   em:Pays .

em:Fleuve  a             rdfs:Class ;
        rdfs:label       "Fleuve" ;
        rdfs:subClassOf  em:Water .

em:Ocean  a         em:TypeValue ;
        rdfs:label  "Océan" .

em:EstSource  a      rdf:Property ;
        rdfs:domain  em:Pays ;
        rdfs:label   "Est Source" ;
        rdfs:range   em:Fleuve .

em:TypeValue  a  rdfs:Class .

em:Liquid  a    rdfs:Class .
